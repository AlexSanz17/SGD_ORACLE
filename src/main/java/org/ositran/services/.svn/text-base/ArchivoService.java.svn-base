package org.osinerg.services;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.rmi.RemoteException;
import java.util.List;
import java.util.Map;
import org.osinerg.daos.SearchMode;
import org.osinerg.dojo.grid.Item;
import org.osinerg.pojos.ArchivoVersionado;
import org.osinerg.utils.ArchivoTemporal;

import com.btg.osinergmin.siged.domain.Archivo;
import com.btg.osinergmin.siged.domain.Documento;
import com.btg.osinergmin.siged.domain.Usuario;

public interface ArchivoService {

   public Archivo findByCriteria(Integer iIdDoc, String strNombre) throws RuntimeException;

   public Archivo findById(Integer idArchivo);

   List<Archivo> buscarPorAutor(Integer idAutor, Integer idDocumento);
   
   List<Item> buscarItemArchivoXAutor(Integer idAutor, Integer idDocumento);
   
   void eliminarArchivo(Integer idArchivo);
   
   public Archivo saveArchivo(Archivo objA) throws RuntimeException;

   public File getFile(Integer idArchivo, char tipo) throws FileNotFoundException;

   public File renombrarArchivoDigitalizacion(Documento objD, ArchivoTemporal archivo, int contador);

   public Integer checkEstadoDigitalizacion(Integer iIdDoc) throws RuntimeException;

   public Map<String,List<Archivo>> findByIdDocumento(Integer iIdDocumento);

   public Map<String,List<Archivo>> getArchivoList(Integer iIdExpediente, Integer iIdDocumento, String strRol);

   public void saveArhivoFromSessionToDB(List<ArchivoTemporal> lstArchivoTemporal, Documento objDocumento, Usuario usuario);

   public void updateEstadoByArchivo(Integer iIdArchivo, Character cEstado);

   public void updateEstadoByDocumento(Integer iIdDocumento, Character cEstado);

   public void uploadToAlfresco(ArchivoTemporal objArchivoTemporal, Documento objDocumento, Integer iContador);

   public void checkInToAlfresco(Usuario usuario,ArchivoTemporal objArchivoTemporal, Documento objDocumento, Integer iContador, boolean quitarCorchete) throws RemoteException, IOException;

   public void uploadFile(Usuario usuario,ArchivoTemporal objArchivoTemporal, Documento objDocumento, Integer iContador) throws RemoteException, IOException;

   public List<ArchivoVersionado> getVersions(Documento documento);

   public Archivo guardarArchivoTemporal(ArchivoTemporal objArchivoTemporal, Documento objDocumento, Integer iContador, Usuario usuarioSesion);

   public List<Archivo> buscarLstPor(Integer iIdDocumento, String sNombre, SearchMode sm);
   
   //public void chekInToAlfresco(ArchivoTemporal objArchivoTemporal, Documento objDocumento, Integer iContador) throws RemoteException, IOException;

   public Map<String,List<ArchivoTemporal>> obtenerArchivosRechazados(Integer iIdDocumento);

   List<Archivo> findLstByExpediente(Integer idExpediente);

   List<Archivo> findLstByIdDocumento(Integer idDocumento);
   
   public Map<String,List<Archivo>> getArchivoListPorDocumento(Integer iIdDocumento);
   
   public Archivo getArchivoPrincipalPorDocumento(Integer iIdDocumento);
   
   public List<Archivo> getArchivoListPorDocumentoIG(Integer iIdDocumento);
   
}
